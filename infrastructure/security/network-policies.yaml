# Network Security Policies for Ultimate AI-Native SaaS Platform
# Comprehensive network isolation and security controls

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow ingress traffic to platform services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-platform-ingress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3001  # user-service
    - protocol: TCP
      port: 3002  # tenant-service
    - protocol: TCP
      port: 3003  # plugin-service
    - protocol: TCP
      port: 3004  # ai-service

---
# Allow inter-service communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-inter-service-communication
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: ultimate-saas-platform
    ports:
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
    - protocol: TCP
      port: 3003
    - protocol: TCP
      port: 3004
    - protocol: TCP
      port: 9090  # metrics
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: ultimate-saas-platform
    ports:
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
    - protocol: TCP
      port: 3003
    - protocol: TCP
      port: 3004

---
# Allow database access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-database-access
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgresql
    ports:
    - protocol: TCP
      port: 5432

---
# Allow Redis access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-redis-access
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379

---
# Allow Kafka access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kafka-access
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kafka
    ports:
    - protocol: TCP
      port: 9092

---
# Allow monitoring access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-access
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090  # metrics endpoint

---
# Allow DNS resolution
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Allow external API access (for integrations)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-apis
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ultimate-saas-platform
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---
# Monitoring namespace policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-default-deny
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow Prometheus to scrape metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prometheus-scraping
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: default
    ports:
    - protocol: TCP
      port: 9090
  - to:
    - podSelector:
        matchLabels:
          app: node-exporter
    ports:
    - protocol: TCP
      port: 9100
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Allow Grafana access to Prometheus
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-grafana-prometheus
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: grafana
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Allow AlertManager communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-alertmanager
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: alertmanager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9093
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 25   # SMTP
    - protocol: TCP
      port: 587  # SMTP TLS
    - protocol: TCP
      port: 443  # HTTPS webhooks
    - protocol: UDP
      port: 53   # DNS
    - protocol: TCP
      port: 53   # DNS
